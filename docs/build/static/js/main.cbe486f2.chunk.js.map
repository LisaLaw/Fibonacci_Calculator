{"version":3,"sources":["Components/Fib_Calc.js","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["clearResult","document","getElementById","innerHTML","createErrorMsg","msg","label","error","createElement","id","classList","add","appendChild","computeFib","n","results","parentNode","removeChild","remove","removeErrorMessage","Form","props","handleChange","e","setState","value","target","handleSubmit","preventDefault","handleButtonClick","val","state","bind","className","onSubmit","this","htmlFor","type","name","required","min","step","onInvalid","onChange","placeholder","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gSAAA,SAASA,IAGL,OAFcC,SAASC,eAAe,WAC9BC,UAAY,GACb,KASX,SAASC,EAAeC,GACpB,IAAIC,EAAQL,SAASC,eAAe,SAChCK,EAAQN,SAASO,cAAc,OACnCD,EAAME,GAAK,gBACXF,EAAMJ,UAAYE,EAClBJ,SAASC,eAAe,UAAUQ,UAAUC,IAAI,eAChDL,EAAMM,YAAYL,GAGtB,IAiCeM,EAjCI,SAAbA,EAAaC,GACf,IAAIC,EAAUd,SAASC,eAAe,WAClCK,EAAQN,SAASC,eAAe,iBAUpC,GARIa,GACAf,IAGAO,GAvBR,WACI,IAAIA,EAAQN,SAASC,eAAe,iBACpCK,EAAMS,WAAWC,YAAYV,GAC7BN,SAASC,eAAe,UAAUQ,UAAUQ,OAAO,eAqB/CC,GAGAL,EAAI,EAAG,CAEPV,EADU,mCAEVJ,QAGC,IAAIc,EAAI,IAAM,EAMd,OAAIA,EAAI,EACFA,EAIAD,EAAWC,EAAI,GAAKD,EAAWC,EAAI,GAT1CV,EADU,6BAEVJ,M,OCYOoB,E,kDAjDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAUVC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAEC,MAAOF,EAAEG,OAAOD,SAZjB,EAenBE,aAAe,SAAAJ,GACXA,EAAEK,kBAhBa,EAoBnBC,kBAAoB,SAAAC,GACF7B,SAASC,eAAe,WAC9BC,UAAYU,EAAWiB,IAnB/B,EAAKC,MAAQ,CACTN,MAAO,IAGX,EAAKH,aAAe,EAAKA,aAAaU,KAAlB,gBACpB,EAAKL,aAAe,EAAKA,aAAaK,KAAlB,gBARL,E,0CAyBnB,WAAU,IAAD,OACL,OACI,uBAAOC,UAAU,OAAOxB,GAAG,OAAOyB,SAAUC,KAAKR,aAAjD,UACI,wBAAOS,QAAQ,SAAS3B,GAAG,QAA3B,mDACI,uBACI4B,KAAK,SACL5B,GAAG,SACH6B,KAAK,SACLC,SAAS,WACTC,IAAI,IACJC,KAAK,IACLC,UAAWP,KAAKR,aAChBF,MAAOU,KAAKJ,MAAMN,MAClBkB,SAAUR,KAAKb,aACfsB,YAAY,wBAEpB,wBAAQP,KAAK,SAAS5B,GAAG,gBAAgBoC,QAAS,kBAAM,EAAKhB,kBAAkB,EAAKE,MAAMN,QAA1F,0C,GA1CGqB,aCiBJC,E,4JAdb,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,qBAAKA,UAAU,kBACf,6BAPM,yBAQN,6BAPO,qBAQP,cAAC,EAAD,IACA,mBAAGxB,GAAG,cAAN,iCACA,qBAAKA,GAAG,UAAR,sB,GATUqC,aCMHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1D,SAASC,eAAe,SAM1B8C,M","file":"static/js/main.cbe486f2.chunk.js","sourcesContent":["function clearResult() {\n    var results = document.getElementById(\"results\");\n    results.innerHTML = '';\n    return null;\n}\n\nfunction removeErrorMessage() {\n    var error = document.getElementById(\"error_message\");\n    error.parentNode.removeChild(error);\n    document.getElementById(\"fib_nr\").classList.remove(\"input_error\");\n}\n\nfunction createErrorMsg(msg) {\n    var label = document.getElementById('label');\n    var error = document.createElement('div');\n    error.id = 'error_message';\n    error.innerHTML = msg;\n    document.getElementById(\"fib_nr\").classList.add(\"input_error\");\n    label.appendChild(error);\n}\n\nconst computeFib = n => {\n    var results = document.getElementById(\"results\");\n    var error = document.getElementById(\"error_message\");\n\n    if (results) {\n        clearResult();\n    }\n\n    if (error) {\n        removeErrorMessage();\n    }\n\n    if (n < 0) {\n        let msg = 'Please choose a positive value.';\n        createErrorMsg(msg);\n        clearResult();\n    }\n\n    else if (n % 1 !== 0) {\n        let msg = 'Please choose an integer.';\n        createErrorMsg(msg);\n        clearResult();\n    }\n\n    else if (n < 2) {\n        return n;\n    }\n\n    else {\n        return computeFib(n - 1) + computeFib(n - 2);\n    }\n}\n\nexport default computeFib;","import React, { Component } from 'react';\nimport '../Styles/form.css';\nimport computeFib from './Fib_Calc';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = e => {\n        this.setState({ value: e.target.value });\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n    }\n\n\n    handleButtonClick = val => {\n        var results = document.getElementById(\"results\");\n        results.innerHTML = computeFib(val);\n    }\n\n    render() {\n        return (\n            < form className=\"form\" id=\"form\" onSubmit={this.handleSubmit}>\n                <label htmlFor=\"fib_nr\" id=\"label\">Choose a position in the Fib sequence:\n                    <input\n                        type=\"number\"\n                        id=\"fib_nr\"\n                        name=\"fib_nr\"\n                        required=\"required\"\n                        min=\"0\"\n                        step=\"1\"\n                        onInvalid={this.handleSubmit}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        placeholder=\"Choose a number.\" />\n                </label>\n                <button type=\"submit\" id=\"submit_button\" onClick={() => this.handleButtonClick(this.state.value)}> Get your Fib Number!\n                </button >\n            </form >\n        );\n    }\n\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './Components/Form.js';\n\nconst title = 'Fibonacci Calculator';\nconst author = 'made by Lisa Law';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"img_container\"></div>\n        <h1>{title}</h1>\n        <h5>{author}</h5>\n        <Form />\n        <p id=\"result_text\">Your fib number is:</p>\n        <div id=\"results\"> </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}